#!/bin/bash

# Preparation:
rootPath="./"
confPath="conf.d/"
confSuf=".cnf"
tmpPath="CA/"
outPath="output/"
outFile="leapondCA"
outExt=".crt"
defaultCnf=$confPath"cnf.default"
defaultCnfUsed=false

echo "####################################"
echo "Generating OpenSSL cretatioins."
echo "####################################"

if ! [ -e $tmpPath"tmp" ] ; then
  mkdir $tmpPath"tmp" -p
fi

if ! [ -e $tmpPath"index.txt" ] ; then
  touch $tmpPath"index.txt"
fi

if ! [ -e $tmpPath"serial" ] ; then
  echo "00" > $tmpPath"serial"
fi

read -p "Input the domain name[eg: leapond.com]:" domain

if [ "x$domain" = "x" ]
then
  echo "No domain name input, terminated!"
  exit 0
fi

confFile=$confPath$domain$confSuf
if [ ! -e $confFile ] ; then
  echo "Configuration file not existed: $confFile"
  while read -p "Using the default configuration file? (y/n):" useDefault
    do
      case $useDefault in
        Y|y)
          echo -e "Used the default domain configuration file."
          sed "s/%DOMAIN%/$domain/g" "$defaultCnf" > "$confPath$domain$confSuf"
          defaultCnfUsed=true
          break;
          break;
        ;;
        N|n)
          echo -e "Configuration file missedd, terminated!"
          exit 0
        ;;
        *)
          #echo -e "Wrong input!"
          continue
      esac
  done
fi

echo "Read configuration successfully: $confFile"
echo "CRT: $domain.crt"
if [ -e $domain.crt ] ; then
  echo ""
  echo "The credential \"$domain.crt\" already existed!"
  while read -p "Overwrite it? (y/n):" overwrite
    do
      case $overwrite in
        Y|y)
          echo -e "Forced to overwrite the exited creddential."
          break;
          break;
        ;;
        N|n)
          echo -e "Skipped to overwrite exited creddential."
          exit 0
        ;;
        *)
          #echo -e "Wrong input!"
          continue
      esac
  done
fi
# Gen
openssl genrsa -out $outPath$domain.key 2048
openssl req -new -out $outPath$domain.csr -key $outPath$domain.key -config $confFile $@
# CA sign
openssl ca -batch -config $confFile -notext -cert $outPath$outFile$outExt -in $outPath$domain.csr -out $outPath$domain.crt -extensions v3_req -extfile $confFile

# Selfsign
#openssl x509 -req -days 3650 -in $domain.csr -signkey $domain.key -out $domain.crt -extensions v3_req -extfile $confFile
# Clean
if $defaultCnfUsed ; then
  rm -f $confPath$domain$confSuf
fi
